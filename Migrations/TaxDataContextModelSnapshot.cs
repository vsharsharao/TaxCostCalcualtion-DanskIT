// <auto-generated />
using System;
using BuyingAndSellingRealEstateNordic.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuyingAndSellingRealEstateNordic.Migrations
{
    [DbContext(typeof(TaxDataContext))]
    partial class TaxDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("BuyingAndSellingRealEstateNordic.Models.ScheduleRange", b =>
                {
                    b.Property<long>("ScheduleRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TaxScheduleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("ScheduleRangeId");

                    b.HasIndex("TaxScheduleId");

                    b.ToTable("ScheduleRange");
                });

            modelBuilder.Entity("BuyingAndSellingRealEstateNordic.Models.TaxData", b =>
                {
                    b.Property<long>("TaxDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("TaxDataId");

                    b.ToTable("TaxData");
                });

            modelBuilder.Entity("BuyingAndSellingRealEstateNordic.Models.TaxSchedule", b =>
                {
                    b.Property<long>("TaxScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScheduleType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TaxCost")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TaxDataId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("TaxScheduleId");

                    b.HasIndex("TaxDataId");

                    b.ToTable("TaxSchedule");
                });

            modelBuilder.Entity("BuyingAndSellingRealEstateNordic.Models.ScheduleRange", b =>
                {
                    b.HasOne("BuyingAndSellingRealEstateNordic.Models.TaxSchedule", null)
                        .WithMany("ScheduleRanges")
                        .HasForeignKey("TaxScheduleId");
                });

            modelBuilder.Entity("BuyingAndSellingRealEstateNordic.Models.TaxSchedule", b =>
                {
                    b.HasOne("BuyingAndSellingRealEstateNordic.Models.TaxData", null)
                        .WithMany("Schedule")
                        .HasForeignKey("TaxDataId");
                });
#pragma warning restore 612, 618
        }
    }
}
